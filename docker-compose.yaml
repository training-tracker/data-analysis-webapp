version: '3.7'

services:
  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    build:
      context: backend 
      dockerfile: Dockerfile
    ports:
      - "8080:8080" 
    restart: always
    depends_on:
      - db 
    environment: 
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/integracja
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_JPA_DATABASE-PLATFORM: org.hibernate.dialect.MySQLDialect
      SPRING_DATASOURCE_DRIVERCLASSNAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_HIBERNATE_DDL-AUTO: update
      SPRING_DATASOURCE_INITIALIZATION-MODE: always
      SPRING_DATASOURCE_DATA: file:/app/src/main/resources/data.sql
    networks: 
      - backend
      - frontend

  # Frontend Service 
  app-client:
    build:
      context: frontend 
      dockerfile: Dockerfile
    ports:
      - "5173:5173" 
    restart: always
    depends_on:
      - app-server
    networks:
      - frontend  

  # Database Service (Mysql)
  db:
    image: mysql:5.7
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: integracja
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - "./backend/src/main/resources/data.sql:/docker-entrypoint-initdb.d/1.sql"
    networks:
      - backend

# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend:
